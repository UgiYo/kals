<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>DEMO</title>
<script type="text/javascript" src="/kals/js/jquery.js"></script>
<link type='text/css' rel='stylesheet' href='/kals/web_apps/generic/style' />
<script type="text/javascript" src="/kals/libraries/ckeditor/ckeditor.js"></script>
<script type="text/javascript" src="/kals/libraries/ckeditor/adapters/jquery.js"></script>
<script type="text/javascript" src="/kals/libraries/jquery-ui/js/jquery-ui-1.8.5.custom.min.js"></script>
</head>

<body>

<script type="text/javascript">

function sa_create_temp_obs() {
    var _temp = 'ABBDCCAABCBDBCBBBBCDDBCBCBCBBDBCDB BCBBDBCBAABCDDBCBAABAAABBBAA BDBABABBBCBBDBDBBCDBCABBDCCAABCBDBCBBBBCDDBCBCBCBBDBCDB BCBBDBCBAABCDDBCBAABAAABBBAA BDBABABBBCBBDBDBBCDBCABBDCCAABCBDBCBBBBCDDBCBCBCBBDBCDB BCBBDBCBAABCDDBCBAABAAABBBAA BDBABABBBCBBDBDBBCDBCABBDCCAABCBDBCBBBBCDDBCBCBCBBDBCDB BCBBDBCBAABCDDBCBAABAAABBBAA BDBABABBBCBBDBDBBCDBCABBDCCAABCBDBCBBBBCDDBCBCBCBBDBCDB BCBBDBCBAABCDDBCBAABAAABBBAA BDBABABBBCBBDBDBBCDBCABBDCCAABCBDBCBBBBCDDBCBCBCBBDBCDB BCBBDBCBAABCDDBCBAABAAABBBAA BDBABABBBCBBDBDBBCDBCABBDCCAABCBDBCBBBBCDDBCBCBCBBDBCDB BCBBDBCBAABCDDBCBAABAAABBBAA BDBABABBBCBBDBDBBCDBCABBDCCAABCBDBCBBBBCDDBCBCBCBBDBCDB BCBBDBCBAABCDDBCBAABAAABBBAA BDBABABBBCBBDBDBBCDBCABBDCCAABCBDBCBBBBCDDBCBCBCBBDBCDB BCBBDBCBAABCDDBCBAABAAABBBAA BDBABABBBCBBDBDBBCDBCABBDCCAABCBDBCBBBBCDDBCBCBCBBDBCDB BCBBDBCBAABCDDBCBAABAAABBBAA BDBABABBBCBBDBDBBCDBCABBDCCAABCBDBCBBBBCDDBCBCBCBBDBCDB BCBBDBCBAABCDDBCBAABAAABBBAA BDBABABBBCBBDBDBBCDBCABBDCCAABCBDBCBBBBCDDBCBCBCBBDBCDB BCBBDBCBAABCDDBCBAABAAABBBAA BDBABABBBCBBDBDBBCDBCABBDCCAABCBDBCBBBBCDDBCBCBCBBDBCDB BCBBDBCBAABCDDBCBAABAAABBBAA BDBABABBBCBBDBDBBCDBCABBDCCAABCBDBCBBBBCDDBCBCBCBBDBCDB BCBBDBCBAABCDDBCBAABAAABBBAA BDBABABBBCBBDBDBBCDBCABBDCCAABCBDBCBBBBCDDBCBCBCBBDBCDB BCBBDBCBAABCDDBCBAABAAABBBAA BDBABABBBCBBDBDBBCDBCABBDCCAABCBDBCBBBBCDDBCBCBCBBDBCDB BCBBDBCBAABCDDBCBAABAAABBBAA BDBABABBBCBBDBDBBCDBCABBDCCAABCBDBCBBBBCDDBCBCBCBBDBCDB BCBBDBCBAABCDDBCBAABAAABBBAA BDBABABBBCBBDBDBBCDBCABBDCCAABCBDBCBBBBCDDBCBCBCBBDBCDB BCBBDBCBAABCDDBCBAABAAABBBAA BDBABABBBCBBDBDBBCDBCABBDCCAABCBDBCBBBBCDDBCBCBCBBDBCDB BCBBDBCBAABCDDBCBAABAAABBBAA BDBABABBBCBBDBDBBCDBCABBDCCAABCBDBCBBBBCDDBCBCBCBBDBCDB BCBBDBCBAABCDDBCBAABAAABBBAA BDBABABBBCBBDBDBBCDBCABBDCCAABCBDBCBBBBCDDBCBCBCBBDBCDB BCBBDBCBAABCDDBCBAABAAABBBAA BDBABABBBCBBDBDBBCDBCABBDCCAABCBDBCBBBBCDDBCBCBCBBDBCDB BCBBDBCBAABCDDBCBAABAAABBBAA BDBABABBBCBBDBDBBCDBCABBDCCAABCBDBCBBBBCDDBCBCBCBBDBCDB BCBBDBCBAABCDDBCBAABAAABBBAA BDBABABBBCBBDBDBBCDBCABBDCCAABCBDBCBBBBCDDBCBCBCBBDBCDB BCBBDBCBAABCDDBCBAABAAABBBAA BDBABABBBCBBDBDBBCDBCABBDCCAABCBDBCBBBBCDDBCBCBCBBDBCDB BCBBDBCBAABCDDBCBAABAAABBBAA BDBABABBBCBBDBDBBCDBCABBDCCAABCBDBCBBBBCDDBCBCBCBBDBCDB BCBBDBCBAABCDDBCBAABAAABBBAA BDBABABBBCBBDBDBBCDBCABBDCCAABCBDBCBBBBCDDBCBCBCBBDBCDB BCBBDBCBAABCDDBCBAABAAABBBAA BDBABABBBCBBDBDBBCDBCABBDCCAABCBDBCBBBBCDDBCBCBCBBDBCDB BCBBDBCBAABCDDBCBAABAAABBBAA BDBABABBBCBBDBDBBCDBCABBDCCAABCBDBCBBBBCDDBCBCBCBBDBCDB BCBBDBCBAABCDDBCBAABAAABBBAA BDBABABBBCBBDBDBBCDBCABBDCCAABCBDBCBBBBCDDBCBCBCBBDBCDB BCBBDBCBAABCDDBCBAABAAABBBAA BDBABABBBCBBDBDBBCDBC';
    
    $('.sa-config .obs:first').val(_temp);
}

function sa_start()
{   
    var _n = 0;    //總coding次數
    var _ns = 0;   //序列次數
    var _breaks = 1;    //斷片次數
    
    var _code_list = [];    //包含的coding
    var _code_f = {};    //頻率
    var _seq_f = {};    //每種序列發生的頻率
    
    //取得參數
    var _config_obs = $.trim($('.sa-config .obs').val());
    if (_config_obs == '')
    {
        alert('請輸入觀察樣本！');
        $('.sa-config .obs').focus();
        return;
    }
    else
    {
        var _temp = _config_obs.split('\n');
        _config_obs = _temp.join(' ');
        _temp = _config_obs.split('\t');
        _config_obs = _temp.join(' ');
        _temp = _config_obs.split('　');
        _config_obs = _temp.join(' ');
    }
    
    var _config_codes = $.trim($('.sa-config .codes').val());
    var _config_repeatable = $('.sa-config-form [name="repeatable"]:checked').attr('value');
    var _repeatable = false;
    if (_config_repeatable != 'auto')
        _repeatable = eval(_config_repeatable);
    var _first_order = ($('.sa-config [name="exp_model"]:checked').attr('value') == 'first_order');
    var _lag = $.trim($('.sa-config [name="lag"]').attr('value'));
    if (_lag == '')
    {
        alert('請輸入觀察序列長度！');
        $('.sa-config [name="lag"]').focus();
        return;
    }
    else
    {
        _lag = parseInt(_lag);
        if (isNaN(_lag))
            _lag = 2;
        
        if (_lag > 3)
        {
            if (window.confirm('觀察序列長度太長的話，運算時間要很久，你確定要這麼做嗎？') == false)
            {
                $('.sa-config [name="lag"]').select();
                return;
            }   
        }
    }
    
    
    //設定code
    if (_config_codes != '')
    {
        for (var _i = 0; _i < _config_codes.length; _i++)
        {
            var _code = _config_codes.substr(_i, 1);
            _code_list.push(_code);
            _code_f[_code] = 0;
        }
    }
    
    //開始跑所有的觀察樣本
    for (var _i = 0; _i < _config_obs.length; _i++)
    {
        var _event = _config_obs.substr(_i, 1);
        //先處理_n跟_breaks
        if (_event != ' ')
        {
            _n++;
            
            //檢查加入code list
            if (_config_codes == ''
                && $.inArray(_event, _code_list) == -1)
                _code_list.push(_event);
               
            //初始化code f
            if (typeof(_code_f[_event]) == 'undefined')
                _code_f[_event] = 0;
                
            //計數
            _code_f[_event]++;
            
            
            var _next_event = null;
            if (_i < _config_obs.length - (_lag - 1))
            {
                _next_event = _config_obs.substr(eval(_i+1), (_lag - 1));
                if (_next_event == ' ')
                    _next_event = null;
                else
                    _next_event = _next_event.split('');
            }
            
            if (_next_event != null && $.inArray(' ', _next_event) == -1)
            {
                _ns++;
                
                var _seq_name = _event + _next_event.join('');
                
                if (typeof(_seq_f[_seq_name]) == 'undefined')
                    _seq_f[_seq_name] = 0;
                _seq_f[_seq_name]++;
                
                //判斷是否是_repeatable
                if (_config_repeatable == 'auto'
                    && _event == _next_event[0])
                {
                    _repeatable = true;
                }
            }
        }
        else
            _breaks++;
    }
    
    sa_draw_table(_n, _ns, _breaks, _code_list, _code_f, _seq_f, _repeatable, _first_order, _lag);
}

function sa_draw_table(_n, _ns, _breaks, _code_list, _code_f, _seq_f, _repeatable, _first_order, _lag) {
    
    var _sa_result = $('.sa-result:first');
    
    _sa_result.empty();
    
    $('<div><hr /><h4>結果輸出：</h4></div>').appendTo(_sa_result);
    
    $('<div>編碼次數：'+_n+'</div>').appendTo(_sa_result);
    $('<div>序列次數：'+_ns+'</div>').appendTo(_sa_result);
    $('<div>片段次數：'+_breaks+'</div>').appendTo(_sa_result);
    
    var _code_list_div = $('<div>編碼列表：<span></span></div>').appendTo(_sa_result);
    var _code_list_string = '';
    for (var _i in _code_list)
    {
        if (_code_list_string != '')
            _code_list_string += ', ';
        _code_list_string += _code_list[_i];
    }
    _code_list_div.find('span').html(_code_list_string);
    
    if (_repeatable == true)
        $('<div>編碼重複：可</div>').appendTo(_sa_result);
    else
        $('<div>編碼重複：否</div>').appendTo(_sa_result);
    
    //-----------------
    
    var _f_table = $('<table align="center" border="1" cellpadding="5" class="sa-table sa-result"><caption>編碼轉換頻率表</caption><thead></thead><tbody></tbody></table>')
        .appendTo(_sa_result);
    
    var _f_thead = _f_table.find('thead:first');
    var _f_thead_tr = $('<tr></tr>').appendTo(_f_thead);
    $('<th>&nbsp;</th>').appendTo(_f_thead_tr);
    
    
    var _lag_list = create_lag_list(_code_list, _lag);
    
    for (var _i in _lag_list)
    {
        var _code = _lag_list[_i];
        
        $('<th></th>')
            .html(_code)
            .appendTo(_f_thead_tr);
    }
    $('<th>轉換頻率</th>').appendTo(_f_thead_tr);
    //$('<th>期望機率</th>').appendTo(_f_thead_tr);
    
        
    var _f_tbody = _f_table.find('tbody:first');
    for (var _i in _code_list)
    {
        var _row_code = _code_list[_i];
        
        var _row_tr = $('<tr><th>' + _row_code + '</th></tr>').appendTo(_f_tbody);
        
        var _sf_total = 0;
        
        for (var _j in _lag_list)
        {
            var _col_code = _lag_list[_j];
            
            var _seq_name = _row_code + _col_code;
            var _sf = 0;
            if (typeof(_seq_f[_seq_name]) == 'number')
                _sf = _seq_f[_seq_name];
            
            $('<td></td>').html(_sf).appendTo(_row_tr);
            _sf_total += _sf;
        }
        
        $('<td class="sf-total"></td>').html(_sf_total).appendTo(_row_tr);
        
        /*
        var _cf = 0;
        if (typeof(_code_f[_row_code]) == 'number')
            _cf = _code_f[_row_code];
        $('<td></td>').html(_cf).appendTo(_row_tr);
        
        var _exp_pos = _cf / _n;
        $('<td></td>').html(_exp_pos).appendTo(_row_tr);
        */
    }
    
    create_obs_seq_pos_table(_f_table).appendTo(_sa_result);    
    
    var _obs_f_table = create_obs_f_table(_n, _code_list, _code_f).appendTo(_sa_result);
    
    // -------------------------------------
    var _exp_pos_table;
    if (_first_order == true)
    {
        _exp_pos_table = create_exp_pos_1_table(_n, _code_list, _code_f, _repeatable, _lag, _lag_list).appendTo(_sa_result);        
    }
    else
    {
        _exp_pos_table = create_exp_pos_0_table(_n, _code_list, _code_f, _repeatable, _lag, _lag_list).appendTo(_sa_result);
    }
    
    create_exp_f_table(_exp_pos_table, _ns).appendTo(_sa_result);
    
    var _exp_pos_list = [];
    if (_first_order == true)
    {
        var _exp_pos_td_list = _exp_pos_table.find('td:not(.sf-total)');
        for (var _i = 0; _i < _exp_pos_td_list.length; _i++)
        {
            var _td = _exp_pos_td_list.eq(_i);
            
            var _pos = parseFloat(_td.html());
            if (isNaN(_pos))
                _pos = 0;
            
            _exp_pos_list.push(_pos);
        }
    } 
    else
    {
        _exp_pos = (1 / (_code_list.length));
        _exp_pos = Math.sqrt(_exp_pos, (_lag-1) );
        
        for (var _j in _lag_list)
        {
            _exp_pos_list.push(_exp_pos);
        }
    }
    
    // -------------------------------------
    
    var _z_table = $('<table align="center" border="1" cellpadding="5" class="sa-table sa-result"><caption>z分數表</caption><thead></thead><tbody></tbody></table>')
        .appendTo(_sa_result);
    
    var _z_thead = _z_table.find('thead:first');
    var _z_thead_tr = $('<tr></tr>').appendTo(_z_thead);
    $('<td>&nbsp;</td>').appendTo(_z_thead_tr);
    for (var _i in _lag_list)
    {
        var _code = _lag_list[_i];
        
        $('<th></th>')
            .html(_code)
            .appendTo(_z_thead_tr);
    }
        
    var _z_tbody = _z_table.find('tbody:first');
    
    
    var _sign_result = {};    //有顯著的結果
    
    var _e = 0;
    
    for (var _i in _code_list)
    {
        var _row_code = _code_list[_i];
        
        var _row_tr = $('<tr><th>' + _row_code + '</th></tr>').appendTo(_z_tbody);
        
        var _cf = 0;
        if (typeof(_code_f[_row_code]) == 'number')
            _cf = _code_f[_row_code];
        
        for (var _j in _lag_list)
        {
            var _col_code = _code_list[_j];
            
            var _seq_name = _row_code + _col_code;
            var _sf = 0;
            if (typeof(_seq_f[_seq_name]) == 'number')
                _sf = _seq_f[_seq_name];
            
            var _exp_pos = _exp_pos_list[_e];
            
            var _z = (_sf - (_ns * _exp_pos)) / Math.sqrt(_ns * _exp_pos * ( 1 - _exp_pos) );
            
            if (isNaN(_z))
                _z = 0;
                
            _z = _z.toFixed(2);
            
            
            //var _td = $('<td></td>').html('z: '+ _z + '<br />ns:' + _ns+ '<br />exp_f:' + (_ns*_exp_pos) + '<br />exp: ' + _exp_pos+ '<br />row: ' + _row_code_pos+ '<br />col: ' + _col_code_pos).appendTo(_row_tr);
            var _td = $('<td></td>').html(_z).appendTo(_row_tr);
            
            if (_z > 1.96)
            {
                _td.addClass('sign');
                
                _sign_result[_seq_name] = _z;
            }   
            
            _e++;
        }
    }
    
    
    var _sign_result_div = $('<div>顯著序列：<ul></ul></div>').appendTo(_sa_result);
    var _sign_result_ul = _sign_result_div.find('ul:first'); 
    var _has_sign_result = false;
    for (var _seq_name in _sign_result)
    {
        _has_sign_result = true;
        
        var _z = _sign_result[_seq_name];
        
        var _seq_name_list = _seq_name.split('');
        var _seq_name_dir = _seq_name_list.join('->');
        
        var _li = $('<li></li>').appendTo(_sign_result_ul);
        
        _li.html(_seq_name_dir + ' : ' + _z);
    }
    
    if (_has_sign_result == false)
    {
        $('<li></li>').html('沒有任何序列達到顯著。').appendTo(_sign_result_ul);
    }
}

function create_lag_list(_code_list, _lag, _lag_list)
{
    if (_lag_list == null)
        _lag_list = _code_list;
    
    if (_lag < 3)
        return _lag_list;
    else
    {
        var _new_lag_list = [];
        
        for (var _i in _lag_list)
        {
            var _lag_name = _lag_list[_i];
            
            for (var _c in _code_list)
            {
                var _name = _lag_name + _code_list[_c];
                _new_lag_list.push(_name);
            }
        }
        
        var _new_lag = _lag - 1;
        _lag_list = create_lag_list(_code_list, _new_lag, _new_lag_list);
    }
    return _lag_list;
}

function create_obs_seq_pos_table(_f_table) {
    
    var _table = _f_table.clone();
    
    _table.find('caption').html('編碼轉換機率表');
    
    var _tr_list = _table.find('tbody tr');
    for (var _i = 0; _i < _tr_list.length; _i++)
    {
        var _tr = _tr_list.eq(_i);
        var _sf_total = parseInt(_tr.find('.sf-total').html());
        if (isNaN(_sf_total))
            _sf_total = 0;
        
        if (_sf_total == 0)
        {
            _tr.find('td').html(0);
        }
        else
        {
            var _td_list = _tr.find('td');
            for (var _j = 0; _j < _td_list.length; _j++)
            {
                var _f = parseInt(_td_list.eq(_j).html());
                if (isNaN(_f))
                    _f = 0;
                var _pos = (_f / _sf_total).toFixed(2);
                _td_list.eq(_j).html(_pos);
            }
        }
    }
    
    return _table;
} 

function create_obs_f_table(_n, _code_list, _code_f) {
    
    var _table = $('<table align="center" border="1" cellpadding="5" class="sa-table sa-result"><caption>編碼頻率與機率表</caption><thead></thead><tbody></tbody></table>');
    
    var _thead = _table.find('thead:first');
    var _thead_tr = $('<tr></tr>').appendTo(_thead);
    $('<th>&nbsp;</th>').appendTo(_thead_tr);
    $('<th>頻率</th>').appendTo(_thead_tr);
    $('<th>機率(=頻率/'+_n+')</th>').appendTo(_thead_tr);
        
    var _tbody = _table.find('tbody:first');
    for (var _i in _code_list)
    {
        var _row_code = _code_list[_i];
        
        var _row_tr = $('<tr><th>' + _row_code + '</th></tr>').appendTo(_tbody);
        
        var _cf = 0;
        if (typeof(_code_f[_row_code]) == 'number')
            _cf = _code_f[_row_code];
        
        $('<td></td>').html(_cf).appendTo(_row_tr);
        $('<td></td>').html((_cf / _n)).appendTo(_row_tr);
    }
    
    return _table;
}

function create_exp_pos_1_table(_n, _code_list, _code_f, _repeatable, _lag, _lag_list) {
    
    var _table = $('<table align="center" border="1" cellpadding="5" class="sa-table sa-result"><caption>編碼轉換期望機率表(first-order model)</caption><thead></thead><tbody></tbody></table>');
    
    var _thead = _table.find('thead:first');
    var _thead_tr = $('<tr></tr>').appendTo(_thead);
    $('<th>&nbsp;</th>').appendTo(_thead_tr);
    for (var _i in _lag_list)
    {
        var _code = _lag_list[_i];
        
        $('<th></th>')
            .html(_code)
            .appendTo(_thead_tr);
    }
        
    var _tbody = _table.find('tbody:first');
    for (var _i in _code_list)
    {
        var _row_code = _code_list[_i];
        
        var _row_tr = $('<tr><th>' + _row_code + '</th></tr>').appendTo(_tbody);
        
        var _cf = 0;
        if (typeof(_code_f[_row_code]) == 'number')
            _cf = _code_f[_row_code];
        
        for (var _j in _lag_list)
        {
            var _row_code_f = _cf;
            var _exp_pos = _cf / _n;
            
            var _col_code = _lag_list[_j];
            for (var _k = 0; _k < _col_code.length; _k++)
            {
                var _col_c = _col_code.substr(_k, 1);
                
                var _f = 0;
                if (typeof(_code_f[_col_c]) == 'number')
                    _f = _code_f[_col_c];
                    
                var _p;
                if (_repeatable)
                    _p = _f / _n;
                else
                    _p = _f / (_n - _row_code_f);
                
                _exp_pos = _exp_pos * _p;
            }
            
            var _td = $('<td></td>').html(_exp_pos).appendTo(_row_tr);
        }
    }
    
    return _table;
}

function create_exp_pos_0_table(_n, _code_list, _code_f, _repeatable, _lag, _lag_list) {
    
    var _table = $('<table align="center" border="1" cellpadding="5" class="sa-table sa-result"><caption>編碼轉換期望機率表(zero-order model)</caption><thead></thead><tbody></tbody></table>');
    
    var _thead = _table.find('thead:first');
    var _thead_tr = $('<tr></tr>').appendTo(_thead);
    $('<th>&nbsp;</th>').appendTo(_thead_tr);
    for (var _i in _lag_list)
    {
        var _code = _lag_list[_i];
        
        $('<th></th>')
            .html(_code)
            .appendTo(_thead_tr);
    }
        
    var _tbody = _table.find('tbody:first');
    for (var _i in _code_list)
    {
        var _row_code = _code_list[_i];
        
        var _row_tr = $('<tr><th>' + _row_code + '</th></tr>').appendTo(_tbody);
        
        var _cf = 0;
        if (typeof(_code_f[_row_code]) == 'number')
            _cf = _code_f[_row_code];
        
        for (var _j in _lag_list)
        {
            var _row_code_f = _cf;
            var _exp_pos = _cf / _n;
            
            var _col_code = _lag_list[_j];
            for (var _k = 0; _k < _col_code.length; _k++)
            {
                var _col_c = _col_code.substr(_k, 1);
                
                var _f = 0;
                if (typeof(_code_f[_col_c]) == 'number')
                    _f = _code_f[_col_c];
                    
                var _p;
                if (_repeatable)
                    _p = _f / _n;
                else
                    _p = _f / (_n - _row_code_f);
                
                _exp_pos = _exp_pos * _p;
            }
            
            var _td = $('<td></td>').html(_exp_pos).appendTo(_row_tr);
        }
    }
    
    return _table;
}

function create_exp_f_table(_exp_pos_table, _ns) {
    
    var _exp_f_table = _exp_pos_table.clone();
    _exp_f_table.find('caption').html('編碼轉換期望頻率表');
    
    var _td_list = _exp_f_table.find('td');
    
    for (var _i = 0; _i < _td_list.length; _i++)
    {
        var _exp_pos = _td_list.eq(_i).html();
        _exp_pos = parseFloat(_exp_pos);
            
        
        if (isNaN(_exp_pos))
            continue;
        else
        {
            var _exp_f = _exp_pos * _ns;
            _exp_f = _exp_f.toFixed(2);
            _td_list.eq(_i).html(_exp_f);
        }
    }
    return _exp_f_table;
}

$(function () {
    $('button.create-template').click();
});

</script>
<style type="text/css">
.sa-table th, .sa-table td {
    vertical-align: top;
}
.sa-config.sa-table th {
    text-align:right;
}

.sa-table thead th {
    text-align:center;
}

.sa-table .textarea {
    width: 90%;
}
.sa-table .sign {
    font-weight:bold;
    color:red;
}
.sa-table.sa-result td {
    text-align:center;
}
.sa-table.sa-result {
    margin-bottom: 1em;
}
</style>

<h1>事件序列分析工具</h1>

<form class="sa-config-form">
<table class="sa-config sa-table" width="80%" align="center">
    <tbody>
        <tr>
            <th>觀察樣本</th>
            <td>
                <textarea class="obs textarea" ></textarea>
                <ul>
                    <li>例如：「ABDC CBBD」，空格表示片段</li>
                    <li><button class="create-template" type="button" onclick="sa_create_temp_obs()">輸入範本觀察樣本</button></li>
                </ul>           
            </td>
        </tr>
        <tr>
            <th>觀察編碼</th>
            <td>
                <textarea class="codes textarea"></textarea>
                <ul>
                    <li>例如：「ABCD」，共4種編碼</li>
                    <li>如果沒有空白，則程式會自動從觀察樣本去統計。</li>
                </ul>                
            </td>
        </tr>
        <tr>
            <th>觀察序列長度</th>
            <td>
                <label><input type="text" name="lag" value="2" size="3" /> lag</label>                 
            </td>
        </tr>
        <tr>
            <th>期望機率模型</th>
            <td>      
                <label><input type="radio" name="exp_model" value="first_order" checked="checked" /> First-order model：從觀察樣本中推估期望值。</label><br />
                <label><input type="radio" name="exp_model" value="zero_order" /> Zero-order model：假設每種編碼的期望值均相等。</label>            
            </td>
        </tr>
        <tr>
            <th>編碼重複</th>
            <td>
                <label><input type="radio" name="repeatable" value="auto" checked="checked" /> 根據樣本判斷</label>
                <label><input type="radio" name="repeatable" value="true" /> 可重複</label>
                <label><input type="radio" name="repeatable" value="false" /> 不可重複</label>                
            </td>
        </tr>
    </tbody>
    <tfoot>
        
        <tr>
            <td colspan="2" align="center">
                <button type="button" onclick="sa_start()">開始計算</button>
            </td>
        </tr>
    </tfoot>
</table>
</form>
<div class="sa-result"></div>

<hr />
<h4>參考文獻</h4><ul><li>Bakeman, R. (1986). Observing interaction : an introduction to sequential analysis. Cambridge ;New York: Cambridge University Press.</li></ul>

</body>
</html>
